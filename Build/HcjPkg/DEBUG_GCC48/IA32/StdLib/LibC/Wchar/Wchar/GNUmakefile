#
# DO NOT EDIT
# This file is auto-generated by build utility
#
# Module Name:
#
#   GNUmakefile
#
# Abstract:
#
#   Auto-generated makefile for building modules, libraries or platform
#
    

#
# Platform Macro Definition
#
PLATFORM_NAME = HcjPkg
PLATFORM_GUID = e66a3197-e455-4d79-9122-92ba690aa64f
PLATFORM_VERSION = 0.01
PLATFORM_RELATIVE_DIR = edk2/HcjPkg
PLATFORM_DIR = /home/hcj/UEFIWorkspace/edk2/HcjPkg
PLATFORM_OUTPUT_DIR = Build/HcjPkg

#
# Module Macro Definition
#
MODULE_NAME = LibWchar
MODULE_GUID = 42c078ef-14a8-4e30-9329-6f12d796e54a
MODULE_NAME_GUID = LibWchar
MODULE_VERSION = 1.0
MODULE_TYPE = UEFI_APPLICATION
MODULE_FILE = Wchar.inf
MODULE_FILE_BASE_NAME = Wchar
BASE_NAME = $(MODULE_NAME)
MODULE_RELATIVE_DIR = StdLib/LibC/Wchar
PACKAGE_RELATIVE_DIR = LibC/Wchar
MODULE_DIR = /home/hcj/UEFIWorkspace/edk2-libc/StdLib/LibC/Wchar
FFS_OUTPUT_DIR = 

MODULE_ENTRY_POINT = _ModuleEntryPoint
ARCH_ENTRY_POINT = _ModuleEntryPoint
IMAGE_ENTRY_POINT = _ModuleEntryPoint

INF_VERSION = 0x00010005
BASE_NAME = LibWchar
FILE_GUID = 42c078ef-14a8-4e30-9329-6f12d796e54a
MODULE_TYPE = UEFI_APPLICATION
VERSION_STRING = 1.0

#
# Build Configuration Macro Definition
#
ARCH = IA32
TOOLCHAIN = GCC48
TOOLCHAIN_TAG = GCC48
TARGET = DEBUG

#
# Build Directory Macro Definition
#
# PLATFORM_BUILD_DIR = /home/hcj/UEFIWorkspace/Build/HcjPkg/DEBUG_GCC48
BUILD_DIR = /home/hcj/UEFIWorkspace/Build/HcjPkg/DEBUG_GCC48
BIN_DIR = $(BUILD_DIR)/IA32
LIB_DIR = $(BIN_DIR)
MODULE_BUILD_DIR = /home/hcj/UEFIWorkspace/Build/HcjPkg/DEBUG_GCC48/IA32/StdLib/LibC/Wchar/Wchar
OUTPUT_DIR = /home/hcj/UEFIWorkspace/Build/HcjPkg/DEBUG_GCC48/IA32/StdLib/LibC/Wchar/Wchar/OUTPUT
DEBUG_DIR = /home/hcj/UEFIWorkspace/Build/HcjPkg/DEBUG_GCC48/IA32/StdLib/LibC/Wchar/Wchar/DEBUG
DEST_DIR_OUTPUT = $(OUTPUT_DIR)
DEST_DIR_DEBUG = $(DEBUG_DIR)

#
# Shell Command Macro
#
CP = cp -f
MV = mv -f
RM = rm -f
MD = mkdir -p
RD = rm -r -f


#
# Tools definitions specific to this module
#
APP_FLAGS = 

ASL_FLAGS = 
ASL_OUTFLAGS =  -p
ASL = /home/hcj/UEFIWorkspace/acpica/generate/unix/bin/iasl

ASLCC_FLAGS = -x c -m32
ASLCC = gcc

ASLDLINK_FLAGS = -nostdlib -Wl,-n,-q,--gc-sections -z common-page-size=0x20 -Wl,--entry,ReferenceAcpiTable -u ReferenceAcpiTable -Wl,-m,elf_i386
ASLDLINK = gcc

ASLPP_FLAGS = -x c -E -include AutoGen.h
ASLPP = gcc

ASM_FLAGS = -c -x assembler -imacros AutoGen.h -m32 -march=i386
ASM = gcc

ASMLINK_FLAGS = /nologo /tiny
ASMLINK = bin16\link16.exe

BROTLI_GUID =  3D532050-5CDA-4FD0-879E-0F7F630D5AFB
BROTLI = BrotliCompress

CC_FLAGS = -g -Os -fshort-wchar -fno-builtin -fno-strict-aliasing -Wall -Wno-array-bounds -include AutoGen.h -fno-common -ffunction-sections -fdata-sections -DSTRING_ARRAY_NAME=$(BASE_NAME)Strings -m32 -march=i586 -malign-double -fno-stack-protector -D EFI32 -fno-asynchronous-unwind-tables -Wno-address -Os -nostdinc -nostdlib -DUEFI_C_SOURCE
CC = gcc

CRC32_GUID =  FC1BCDB0-7D31-49AA-936A-A4600D9DD083
CRC32 = GenCrc32

DEPS_FLAGS = -MMD -MF $@.deps

DLINK_FLAGS = -nostdlib -Wl,-n,-q,--gc-sections -z common-page-size=0x20 -Wl,--entry,$(IMAGE_ENTRY_POINT) -u $(IMAGE_ENTRY_POINT) -Wl,-Map,$(DEST_DIR_DEBUG)/$(BASE_NAME).map,--whole-archive -Wl,-m,elf_i386,--oformat=elf32-i386
DLINK = gcc

DLINK2_FLAGS = -Wl,--defsym=PECOFF_HEADER_SIZE=0x220 -Wl,--script=$(EDK_TOOLS_PATH)/Scripts/GccBase.lds

DTC_FLAGS = -H epapr
DTC = dtc

DTCPP = cpp

GENFW_FLAGS = 
GENFW = GenFw

LZMA_GUID =  EE4E5898-3914-4259-9D6E-DC7BD79403CF
LZMA = LzmaCompress

LZMAF86_GUID =  D42AE6BD-1352-4bfb-909A-CA72A6EAE889
LZMAF86 = LzmaF86Compress

MAKE = make

NASM_FLAGS = -f elf32
NASM = nasm

NASMB_FLAGS = -f bin

OBJCOPY_ADDDEBUGFLAG =  --add-gnu-debuglink=$(DEBUG_DIR)/$(MODULE_NAME).debug
OBJCOPY_FLAGS = 
OBJCOPY = objcopy

OPTROM_FLAGS = -e
OPTROM = EfiRom

PKCS7SIGN_GUID =  4AAFD29D-68DF-49EE-8AA9-347D375665A7
PKCS7SIGN = Pkcs7Sign

PP_FLAGS = -E -x assembler-with-cpp -include AutoGen.h -DOPENSBI_EXTERNAL_SBI_TYPES=OpensbiTypes.h
PP = gcc

RC_FLAGS = -I binary -O elf32-i386 -B i386 --rename-section .data=.hii
RC = objcopy

RSA2048SHA256SIGN_GUID =  A7717414-C616-4977-9420-844712A735BF
RSA2048SHA256SIGN = Rsa2048Sha256Sign

SLINK = ar

SYMRENAME_FLAGS = Symbol renaming not needed for
SYMRENAME = echo

TIANO_GUID =  A31280AD-481E-41B6-95E8-127F4C984779
TIANO = TianoCompress

VFR_FLAGS = -l -n
VFR = VfrCompile

VFRPP_FLAGS = -x c -E -P -DVFRCOMPILE --include $(MODULE_NAME)StrDefs.h
VFRPP = gcc

VPDTOOL_GUID =  8C3D856A-9BE6-468E-850A-24F7A8D38E08
VPDTOOL = BPDG


MAKE_FILE = $(MODULE_BUILD_DIR)/GNUmakefile

#
# Build Macro
#
OBJECT_FILES =  \
    $(OUTPUT_DIR)/Comparison.obj \
    $(OUTPUT_DIR)/Concatenation.obj \
    $(OUTPUT_DIR)/ConsDecons.obj \
    $(OUTPUT_DIR)/Copying.obj \
    $(OUTPUT_DIR)/Searching.obj \
    $(OUTPUT_DIR)/String.obj

INC =  \
    -I$(WORKSPACE)/edk2-libc/StdLib/LibC/Wchar \
    -I$(DEBUG_DIR) \
    -I$(WORKSPACE)/edk2-libc/StdLib \
    -I$(WORKSPACE)/edk2-libc/StdLib/Include \
    -I$(WORKSPACE)/edk2-libc/StdLib/Include/Ia32 \
    -I$(WORKSPACE)/edk2-libc/StdLibPrivateInternalFiles \
    -I$(WORKSPACE)/edk2-libc/StdLibPrivateInternalFiles/Include \
    -I$(WORKSPACE)/edk2-libc/StdLibPrivateInternalFiles/Include/Ia32 \
    -I$(WORKSPACE)/edk2/MdePkg \
    -I$(WORKSPACE)/edk2/MdePkg/Include \
    -I$(WORKSPACE)/edk2/MdePkg/Test/UnitTest/Include \
    -I$(WORKSPACE)/edk2/MdePkg/Include/Ia32

OBJECT_FILES_LIST = /home/hcj/UEFIWorkspace/Build/HcjPkg/DEBUG_GCC48/IA32/StdLib/LibC/Wchar/Wchar/OUTPUT/object_files.lst


#
# Overridable Target Macro Definitions
#
FORCE_REBUILD = force_build
INIT_TARGET = init
PCH_TARGET =
BC_TARGET = 
CODA_TARGET = /home/hcj/UEFIWorkspace/Build/HcjPkg/DEBUG_GCC48/IA32/StdLib/LibC/Wchar/Wchar/OUTPUT/LibWchar.lib \
              

#
# Default target, which will build dependent libraries in addition to source files
#

all: mbuild


#
# Target used when called from platform makefile, which will bypass the build of dependent libraries
#

pbuild: $(INIT_TARGET) $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# ModuleTarget
#

mbuild: $(INIT_TARGET) $(BC_TARGET) gen_libs $(PCH_TARGET) $(CODA_TARGET)

#
# Build Target used in multi-thread build mode, which will bypass the init and gen_libs targets
#

tbuild: $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# Phony target which is used to force executing commands for a target
#
force_build:
	-@

#
# Target to update the FD
#

fds: mbuild gen_fds

#
# Initialization target: print build information and create necessary directories
#
init: info dirs

info:
	-@echo Building ... $(MODULE_DIR)/$(MODULE_FILE) [$(ARCH)]

dirs:
	-@$(MD) $(DEBUG_DIR)
	-@$(MD) $(OUTPUT_DIR)


strdefs:
	-@$(CP) $(DEBUG_DIR)/AutoGen.h $(DEBUG_DIR)/$(MODULE_NAME)StrDefs.h

#
# GenLibsTarget
#
gen_libs:
	@cd $(MODULE_BUILD_DIR)

#
# Build Flash Device Image
#
gen_fds:
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BUILD_DIR)/GNUmakefile fds
	@cd $(MODULE_BUILD_DIR)

include $(MODULE_BUILD_DIR)/dependency
include $(MODULE_BUILD_DIR)/deps_target

#
# Individual Object Build Targets
#
$(OUTPUT_DIR)/String.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/String.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/String.obj : $(WORKSPACE)/edk2-libc/StdLib/LibC/Wchar/String.c
	"$(CC)" $(DEPS_FLAGS) $(CC_FLAGS) -c -o /home/hcj/UEFIWorkspace/Build/HcjPkg/DEBUG_GCC48/IA32/StdLib/LibC/Wchar/Wchar/OUTPUT/./String.obj $(INC) /home/hcj/UEFIWorkspace/edk2-libc/StdLib/LibC/Wchar/String.c

$(OUTPUT_DIR)/Copying.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/Copying.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/Copying.obj : $(WORKSPACE)/edk2-libc/StdLib/LibC/Wchar/Copying.c
	"$(CC)" $(DEPS_FLAGS) $(CC_FLAGS) -c -o /home/hcj/UEFIWorkspace/Build/HcjPkg/DEBUG_GCC48/IA32/StdLib/LibC/Wchar/Wchar/OUTPUT/./Copying.obj $(INC) /home/hcj/UEFIWorkspace/edk2-libc/StdLib/LibC/Wchar/Copying.c

$(OUTPUT_DIR)/Comparison.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/Comparison.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/Comparison.obj : $(WORKSPACE)/edk2-libc/StdLib/LibC/Wchar/Comparison.c
	"$(CC)" $(DEPS_FLAGS) $(CC_FLAGS) -c -o /home/hcj/UEFIWorkspace/Build/HcjPkg/DEBUG_GCC48/IA32/StdLib/LibC/Wchar/Wchar/OUTPUT/./Comparison.obj $(INC) /home/hcj/UEFIWorkspace/edk2-libc/StdLib/LibC/Wchar/Comparison.c

$(OUTPUT_DIR)/Searching.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/Searching.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/Searching.obj : $(WORKSPACE)/edk2-libc/StdLib/LibC/Wchar/Searching.c
	"$(CC)" $(DEPS_FLAGS) $(CC_FLAGS) -c -o /home/hcj/UEFIWorkspace/Build/HcjPkg/DEBUG_GCC48/IA32/StdLib/LibC/Wchar/Wchar/OUTPUT/./Searching.obj $(INC) /home/hcj/UEFIWorkspace/edk2-libc/StdLib/LibC/Wchar/Searching.c

$(OUTPUT_DIR)/ConsDecons.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/ConsDecons.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/ConsDecons.obj : $(WORKSPACE)/edk2-libc/StdLib/LibC/Wchar/ConsDecons.c
	"$(CC)" $(DEPS_FLAGS) $(CC_FLAGS) -c -o /home/hcj/UEFIWorkspace/Build/HcjPkg/DEBUG_GCC48/IA32/StdLib/LibC/Wchar/Wchar/OUTPUT/./ConsDecons.obj $(INC) /home/hcj/UEFIWorkspace/edk2-libc/StdLib/LibC/Wchar/ConsDecons.c

$(OUTPUT_DIR)/Concatenation.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/Concatenation.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/Concatenation.obj : $(WORKSPACE)/edk2-libc/StdLib/LibC/Wchar/Concatenation.c
	"$(CC)" $(DEPS_FLAGS) $(CC_FLAGS) -c -o /home/hcj/UEFIWorkspace/Build/HcjPkg/DEBUG_GCC48/IA32/StdLib/LibC/Wchar/Wchar/OUTPUT/./Concatenation.obj $(INC) /home/hcj/UEFIWorkspace/edk2-libc/StdLib/LibC/Wchar/Concatenation.c

$(OUTPUT_DIR)/LibWchar.lib : $(OBJECT_FILES)
$(OUTPUT_DIR)/LibWchar.lib : $(OBJECT_FILES_LIST)
	$(RM) /home/hcj/UEFIWorkspace/Build/HcjPkg/DEBUG_GCC48/IA32/StdLib/LibC/Wchar/Wchar/OUTPUT/LibWchar.lib
	"$(SLINK)" cr /home/hcj/UEFIWorkspace/Build/HcjPkg/DEBUG_GCC48/IA32/StdLib/LibC/Wchar/Wchar/OUTPUT/LibWchar.lib $(SLINK_FLAGS) @$(OBJECT_FILES_LIST)



#
# clean all intermediate files
#
clean:
	$(RD) $(OUTPUT_DIR)
		$(RM) AutoGenTimeStamp

#
# clean all generated files
#
cleanall:
	$(RD) $(DEBUG_DIR)
	$(RD) $(OUTPUT_DIR)
	$(RM) *.pdb *.idb > NUL 2>&1
	$(RM) $(BIN_DIR)/$(MODULE_NAME).efi
	$(RM) AutoGenTimeStamp

#
# clean all dependent libraries built
#
cleanlib:
	@cd $(MODULE_BUILD_DIR)

